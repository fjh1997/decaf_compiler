0a1,6
> 
> *** Error line 6.
>   double b;
>          ^
> *** Declaration of 'b' here conflicts with declaration on line 4
> 
samples-checkpoint/bad1.decaf
0a1,6
> 
> *** Error line 5.
> int Rutabaga(int a, double b, bool c) {
>     ^^^^^^^^
> *** Declaration of 'Rutabaga' here conflicts with declaration on line 1
> 
samples-checkpoint/bad2.decaf
0a1,18
> 
> *** Error line 1.
> void Mystery(Unknown a) {}
>              ^^^^^^^
> *** No declaration found for type 'Unknown'
> 
> 
> *** Error line 3.
> class Trouble extends Missing implements Gone
>                       ^^^^^^^
> *** No declaration found for class 'Missing'
> 
> 
> *** Error line 3.
> class Trouble extends Missing implements Gone
>                                          ^^^^
> *** No declaration found for interface 'Gone'
> 
samples-checkpoint/bad3.decaf
0a1,18
> 
> *** Error line 9.
> class Block {
>       ^^^^^
> *** Declaration of 'Block' here conflicts with declaration on line 5
> 
> 
> *** Error line 17.
> int Shape;
>     ^^^^^
> *** Declaration of 'Shape' here conflicts with declaration on line 1
> 
> 
> *** Error line 14.
>   ABlock[] test;
>   ^^^^^^
> *** No declaration found for type 'ABlock'
> 
samples-checkpoint/bad4.decaf
0a1,12
> 
> *** Error line 1.
> int Oops(int x, int x) {
>                     ^
> *** Declaration of 'x' here conflicts with declaration on line 1
> 
> 
> *** Error line 5.
>     void Winky(int a, double b, int[] a) {
>                                       ^
> *** Declaration of 'a' here conflicts with declaration on line 5
> 
samples-checkpoint/bad5.decaf
0a1,12
> 
> *** Error line 11.
>     void Method3(bool a) {}
>          ^^^^^^^
> *** Method 'Method3' must match inherited type signature
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
> 
samples-checkpoint/bad6.decaf
0a1,12
> 
> *** Error line 7.
>         int b;
>             ^
> *** Declaration of 'b' here conflicts with declaration on line 6
> 
> 
> *** Error line 13.
>            Unknown b;
>            ^^^^^^^
> *** No declaration found for type 'Unknown'
> 
samples-checkpoint/bad7.decaf
0a1,12
> 
> *** Error line 4.
>    bool f(int[] a) {}
>         ^
> *** Declaration of 'f' here conflicts with declaration on line 3
> 
> 
> *** Error line 9.
>    int a;
>        ^
> *** Declaration of 'a' here conflicts with declaration on line 2
> 
samples-checkpoint/bad8.decaf
0a1,12
> 
> *** Error line 12.
>   void root() {
>        ^^^^
> *** Declaration of 'root' here conflicts with declaration on line 10
> 
> 
> *** Error line 15.
>   bool IsRipe(int weight, double weather) {
>        ^^^^^^
> *** Method 'IsRipe' must match inherited type signature
> 
samples-checkpoint/bad9.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
13,18d12
< 
< *** Error line 3.
<    void f(int y) {}
<         ^
< *** Method 'f' must match inherited type signature
< 
samples-checkpoint/bad8.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
0a1,12
> 
> *** Error line 7.
>         int b;
>             ^
> *** Declaration of 'b' here conflicts with declaration on line 6
> 
> 
> *** Error line 13.
>            Unknown b;
>            ^^^^^^^
> *** No declaration found for type 'Unknown'
> 
samples-checkpoint/bad7.decaf
1,72d0
< 
< *** Error line 228.
<     gRnd.Init(ReadInteger());
<          ^^^^
< *** No declaration found for function 'Init'
< 
< 
< *** Error line 232.
<     deck.Init();
<          ^^^^
< *** No declaration found for function 'Init'
< 
< 
< *** Error line 233.
<     deck.Shuffle();
<          ^^^^^^^
< *** No declaration found for function 'Shuffle'
< 
< 
< *** Error line 282.
<     dealer.Init(0);
<            ^^^^
< *** No declaration found for function 'Init'
< 
< 
< *** Error line 283.
<     dealer.Hit(deck);
<            ^^^
< *** No declaration found for function 'Hit'
< 
< 
< *** Error line 285.
<     dealer.TakeTurn(deck);
<            ^^^^^^^^
< *** No declaration found for function 'TakeTurn'
< 
< 
< *** Error line 304.
<   house.SetupGame();
<   ^^^^^
< *** No declaration found for variable 'house'
< 
< 
< *** Error line 304.
<   house.SetupGame();
<         ^^^^^^^^^
< *** No declaration found for function 'SetupGame'
< 
< 
< *** Error line 305.
<   house.SetupPlayers();
<   ^^^^^
< *** No declaration found for variable 'house'
< 
< 
< *** Error line 305.
<   house.SetupPlayers();
<         ^^^^^^^^^^^^
< *** No declaration found for function 'SetupPlayers'
< 
< 
< *** Error line 310.
<   house.PrintAllMoney();
<   ^^^^^
< *** No declaration found for variable 'house'
< 
< 
< *** Error line 310.
<   house.PrintAllMoney();
<         ^^^^^^^^^^^^^
< *** No declaration found for function 'PrintAllMoney'
< 
samples-checkpoint/blackjack.decaf
1,72d0
< 
< *** Error line 130.
<   m.Init();
<   ^
< *** No declaration found for variable 'm'
< 
< 
< *** Error line 130.
<   m.Init();
<     ^^^^
< *** No declaration found for function 'Init'
< 
< 
< *** Error line 131.
<   m.SeedMatrix();
<   ^
< *** No declaration found for variable 'm'
< 
< 
< *** Error line 131.
<   m.SeedMatrix();
<     ^^^^^^^^^^
< *** No declaration found for function 'SeedMatrix'
< 
< 
< *** Error line 132.
<   m.PrintMatrix();
<   ^
< *** No declaration found for variable 'm'
< 
< 
< *** Error line 132.
<   m.PrintMatrix();
<     ^^^^^^^^^^^
< *** No declaration found for function 'PrintMatrix'
< 
< 
< *** Error line 137.
<   m.Init();
<   ^
< *** No declaration found for variable 'm'
< 
< 
< *** Error line 137.
<   m.Init();
<     ^^^^
< *** No declaration found for function 'Init'
< 
< 
< *** Error line 138.
<   m.SeedMatrix();
<   ^
< *** No declaration found for variable 'm'
< 
< 
< *** Error line 138.
<   m.SeedMatrix();
<     ^^^^^^^^^^
< *** No declaration found for function 'SeedMatrix'
< 
< 
< *** Error line 139.
<   m.PrintMatrix();
<   ^
< *** No declaration found for variable 'm'
< 
< 
< *** Error line 139.
<   m.PrintMatrix();
<     ^^^^^^^^^^^
< *** No declaration found for function 'PrintMatrix'
< 
samples-checkpoint/matrix.decaf
1,30d0
< 
< *** Error line 26.
<     InitAnimal(h,m);
<     ^^^^^^^^^^
< *** No declaration found for function 'InitAnimal'
< 
< 
< *** Error line 39.
<   betsy.InitCow(5, null, true);
<   ^^^^^
< *** No declaration found for variable 'betsy'
< 
< 
< *** Error line 39.
<   betsy.InitCow(5, null, true);
<         ^^^^^^^
< *** No declaration found for function 'InitCow'
< 
< 
< *** Error line 41.
<   b.GetMom();
<   ^
< *** No declaration found for variable 'b'
< 
< 
< *** Error line 41.
<   b.GetMom();
<     ^^^^^^
< *** No declaration found for function 'GetMom'
< 
samples-checkpoint/t9.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
1,126d0
< 
< *** Error line 208.
<       Hit(deck);
<       ^^^
< *** No declaration found for function 'Hit'
< 
< 
< *** Error line 228.
<     gRnd.Init(ReadInteger());
<          ^^^^
< *** No declaration found for function 'Init'
< 
< 
< *** Error line 232.
<     deck.Init();
<          ^^^^
< *** No declaration found for function 'Init'
< 
< 
< *** Error line 233.
<     deck.Shuffle();
<          ^^^^^^^
< *** No declaration found for function 'Shuffle'
< 
< 
< *** Error line 244.
<       players[i].Init(i+1);
<                  ^^^^
< *** No declaration found for function 'Init'
< 
< 
< *** Error line 252.
<       if (players[i].HasMoney()) players[i].PlaceBet();
<                                             ^^^^^^^^
< *** No declaration found for function 'PlaceBet'
< 
< 
< *** Error line 258.
<       if (players[i].HasMoney()) players[i].TakeTurn(deck);
<                                             ^^^^^^^^
< *** No declaration found for function 'TakeTurn'
< 
< 
< *** Error line 267.
<         players[i].Resolve(dealer.GetTotal());
<                    ^^^^^^^
< *** No declaration found for function 'Resolve'
< 
< 
< *** Error line 274.
<       players[i].PrintMoney();
<                  ^^^^^^^^^^
< *** No declaration found for function 'PrintMoney'
< 
< 
< *** Error line 279.
<     if (deck.NumCardsRemaining() < 26) deck.Shuffle();
<                                             ^^^^^^^
< *** No declaration found for function 'Shuffle'
< 
< 
< *** Error line 282.
<     dealer.Init(0);
<            ^^^^
< *** No declaration found for function 'Init'
< 
< 
< *** Error line 283.
<     dealer.Hit(deck);
<            ^^^
< *** No declaration found for function 'Hit'
< 
< 
< *** Error line 285.
<     dealer.TakeTurn(deck);
<            ^^^^^^^^
< *** No declaration found for function 'TakeTurn'
< 
< 
< *** Error line 304.
<   house.SetupGame();
<   ^^^^^
< *** No declaration found for variable 'house'
< 
< 
< *** Error line 304.
<   house.SetupGame();
<         ^^^^^^^^^
< *** No declaration found for function 'SetupGame'
< 
< 
< *** Error line 305.
<   house.SetupPlayers();
<   ^^^^^
< *** No declaration found for variable 'house'
< 
< 
< *** Error line 305.
<   house.SetupPlayers();
<         ^^^^^^^^^^^^
< *** No declaration found for function 'SetupPlayers'
< 
< 
< *** Error line 307.
<     house.PlayOneGame();
<     ^^^^^
< *** No declaration found for variable 'house'
< 
< 
< *** Error line 307.
<     house.PlayOneGame();
<           ^^^^^^^^^^^
< *** No declaration found for function 'PlayOneGame'
< 
< 
< *** Error line 310.
<   house.PrintAllMoney();
<   ^^^^^
< *** No declaration found for variable 'house'
< 
< 
< *** Error line 310.
<   house.PrintAllMoney();
<         ^^^^^^^^^^^^^
< *** No declaration found for function 'PrintAllMoney'
< 
samples-checkpoint/blackjack.decaf
1,90d0
< 
< *** Error line 107.
<       elem.SetData(value);
<       ^^^^
< *** No declaration found for variable 'elem'
< 
< 
< *** Error line 107.
<       elem.SetData(value);
<            ^^^^^^^
< *** No declaration found for function 'SetData'
< 
< 
< *** Error line 110.
<       elem.Init(value, y, m[x]);
<       ^^^^
< *** No declaration found for variable 'elem'
< 
< 
< *** Error line 130.
<   m.Init();
<   ^
< *** No declaration found for variable 'm'
< 
< 
< *** Error line 130.
<   m.Init();
<     ^^^^
< *** No declaration found for function 'Init'
< 
< 
< *** Error line 131.
<   m.SeedMatrix();
<   ^
< *** No declaration found for variable 'm'
< 
< 
< *** Error line 131.
<   m.SeedMatrix();
<     ^^^^^^^^^^
< *** No declaration found for function 'SeedMatrix'
< 
< 
< *** Error line 132.
<   m.PrintMatrix();
<   ^
< *** No declaration found for variable 'm'
< 
< 
< *** Error line 132.
<   m.PrintMatrix();
<     ^^^^^^^^^^^
< *** No declaration found for function 'PrintMatrix'
< 
< 
< *** Error line 137.
<   m.Init();
<   ^
< *** No declaration found for variable 'm'
< 
< 
< *** Error line 137.
<   m.Init();
<     ^^^^
< *** No declaration found for function 'Init'
< 
< 
< *** Error line 138.
<   m.SeedMatrix();
<   ^
< *** No declaration found for variable 'm'
< 
< 
< *** Error line 138.
<   m.SeedMatrix();
<     ^^^^^^^^^^
< *** No declaration found for function 'SeedMatrix'
< 
< 
< *** Error line 139.
<   m.PrintMatrix();
<   ^
< *** No declaration found for variable 'm'
< 
< 
< *** Error line 139.
<   m.PrintMatrix();
<     ^^^^^^^^^^^
< *** No declaration found for function 'PrintMatrix'
< 
samples-checkpoint/matrix.decaf
1,30d0
< 
< *** Error line 26.
<     InitAnimal(h,m);
<     ^^^^^^^^^^
< *** No declaration found for function 'InitAnimal'
< 
< 
< *** Error line 39.
<   betsy.InitCow(5, null, true);
<   ^^^^^
< *** No declaration found for variable 'betsy'
< 
< 
< *** Error line 39.
<   betsy.InitCow(5, null, true);
<         ^^^^^^^
< *** No declaration found for function 'InitCow'
< 
< 
< *** Error line 41.
<   b.GetMom();
<   ^
< *** No declaration found for variable 'b'
< 
< 
< *** Error line 41.
<   b.GetMom();
<     ^^^^^^
< *** No declaration found for function 'GetMom'
< 
samples-checkpoint/t9.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
1,30d0
< 
< *** Error line 244.
<       players[i].Init(i+1);
<                  ^^^^
< *** No declaration found for function 'Init'
< 
< 
< *** Error line 252.
<       if (players[i].HasMoney()) players[i].PlaceBet();
<                                             ^^^^^^^^
< *** No declaration found for function 'PlaceBet'
< 
< 
< *** Error line 258.
<       if (players[i].HasMoney()) players[i].TakeTurn(deck);
<                                             ^^^^^^^^
< *** No declaration found for function 'TakeTurn'
< 
< 
< *** Error line 267.
<         players[i].Resolve(dealer.GetTotal());
<                    ^^^^^^^
< *** No declaration found for function 'Resolve'
< 
< 
< *** Error line 274.
<       players[i].PrintMoney();
<                  ^^^^^^^^^^
< *** No declaration found for function 'PrintMoney'
< 
samples-checkpoint/blackjack.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
1,36d0
< 
< *** Error line 77.
<       c = decks[d].GetCard();
<                    ^^^^^^^
< *** No declaration found for function 'GetCard'
< 
< 
< *** Error line 244.
<       players[i].Init(i+1);
<                  ^^^^
< *** No declaration found for function 'Init'
< 
< 
< *** Error line 252.
<       if (players[i].HasMoney()) players[i].PlaceBet();
<                                             ^^^^^^^^
< *** No declaration found for function 'PlaceBet'
< 
< 
< *** Error line 258.
<       if (players[i].HasMoney()) players[i].TakeTurn(deck);
<                                             ^^^^^^^^
< *** No declaration found for function 'TakeTurn'
< 
< 
< *** Error line 267.
<         players[i].Resolve(dealer.GetTotal());
<                    ^^^^^^^
< *** No declaration found for function 'Resolve'
< 
< 
< *** Error line 274.
<       players[i].PrintMoney();
<                  ^^^^^^^^^^
< *** No declaration found for function 'PrintMoney'
< 
samples-checkpoint/blackjack.decaf
1,6d0
< 
< *** Error line 40.
<   b = betsy;
<     ^
< *** Incompatible operands: Animal = Cow
< 
samples-checkpoint/t9.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
1,36d0
< 
< *** Error line 77.
<       c = decks[d].GetCard();
<                    ^^^^^^^
< *** No declaration found for function 'GetCard'
< 
< 
< *** Error line 244.
<       players[i].Init(i+1);
<                  ^^^^
< *** No declaration found for function 'Init'
< 
< 
< *** Error line 252.
<       if (players[i].HasMoney()) players[i].PlaceBet();
<                                             ^^^^^^^^
< *** No declaration found for function 'PlaceBet'
< 
< 
< *** Error line 258.
<       if (players[i].HasMoney()) players[i].TakeTurn(deck);
<                                             ^^^^^^^^
< *** No declaration found for function 'TakeTurn'
< 
< 
< *** Error line 267.
<         players[i].Resolve(dealer.GetTotal());
<                    ^^^^^^^
< *** No declaration found for function 'Resolve'
< 
< 
< *** Error line 274.
<       players[i].PrintMoney();
<                  ^^^^^^^^^^
< *** No declaration found for function 'PrintMoney'
< 
samples-checkpoint/blackjack.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
1,78d0
< 
< *** Error line 29.
<     cards = NewArray(52, int);
<           ^
< *** Incompatible operands: int[] = int
< 
< 
< *** Error line 34.
<       cards[current] = (current + 1) % 13;
<                      ^
< *** Incompatible operands: int[] = int
< 
< 
< *** Error line 41.
<       temp = cards[current];
<            ^
< *** Incompatible operands: int = int[]
< 
< 
< *** Error line 43.
<       cards[r] = temp;
<                ^
< *** Incompatible operands: int[] = int
< 
< 
< *** Error line 50.
<     result = cards[current];
<            ^
< *** Incompatible operands: int = int[]
< 
< 
< *** Error line 63.
<     decks = NewArray(8, Deck);
<           ^
< *** Incompatible operands: Deck[] = Deck
< 
< 
< *** Error line 77.
<       c = decks[d].GetCard();
<                    ^^^^^^^
< *** No declaration found for function 'GetCard'
< 
< 
< *** Error line 241.
<     players = NewArray(numPlayers, Player);
<             ^
< *** Incompatible operands: Player[] = Player
< 
< 
< *** Error line 244.
<       players[i].Init(i+1);
<                  ^^^^
< *** No declaration found for function 'Init'
< 
< 
< *** Error line 252.
<       if (players[i].HasMoney()) players[i].PlaceBet();
<                                             ^^^^^^^^
< *** No declaration found for function 'PlaceBet'
< 
< 
< *** Error line 258.
<       if (players[i].HasMoney()) players[i].TakeTurn(deck);
<                                             ^^^^^^^^
< *** No declaration found for function 'TakeTurn'
< 
< 
< *** Error line 267.
<         players[i].Resolve(dealer.GetTotal());
<                    ^^^^^^^
< *** No declaration found for function 'Resolve'
< 
< 
< *** Error line 274.
<       players[i].PrintMoney();
<                  ^^^^^^^^^^
< *** No declaration found for function 'PrintMoney'
< 
samples-checkpoint/blackjack.decaf
1,42d0
< 
< *** Error line 46.
<       m[i] = NewArray(10, int);
<            ^
< *** Incompatible operands: int[][] = int
< 
< 
< *** Error line 51.
< 		m[i][j] = 0;
<                         ^
< *** Incompatible operands: int[][] = int
< 
< 
< *** Error line 54.
<     m[x][y] = value;
<             ^
< *** Incompatible operands: int[][] = int
< 
< 
< *** Error line 85.
<     m = NewArray(10, SparseItem);
<       ^
< *** Incompatible operands: SparseItem[] = SparseItem
< 
< 
< *** Error line 87.
<       m[i] = null;
<            ^
< *** Incompatible operands: SparseItem[] = null
< 
< 
< *** Error line 93.
<     elem = m[x];
<          ^
< *** Incompatible operands: SparseItem = SparseItem[]
< 
< 
< *** Error line 111.
<       m[x] = elem;
<            ^
< *** Incompatible operands: SparseItem[] = SparseItem
< 
samples-checkpoint/matrix.decaf
1a2,7
> *** Error line 1.
> void Mystery(Unknown a) {}
>              ^^^^^^^
> *** No declaration found for type 'Unknown'
> 
> 
samples-checkpoint/bad3.decaf
12a13,18
> 
> *** Error line 14.
>   ABlock[] test;
>   ^^^^^^
> *** No declaration found for type 'ABlock'
> 
samples-checkpoint/bad4.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
6a7,12
> 
> *** Error line 13.
>            Unknown b;
>            ^^^^^^^
> *** No declaration found for type 'Unknown'
> 
samples-checkpoint/bad7.decaf
1,7d0
< 
< *** Error line 77.
<       c = decks[d].GetCard();
<                    ^^^^^^^
< *** No declaration found for function 'GetCard'
< 
< Segmentation fault
samples-checkpoint/blackjack.decaf
1d0
< Segmentation fault
samples-checkpoint/matrix.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
1,7d0
< 
< *** Error line 77.
<       c = decks[d].GetCard();
<                    ^^^^^^^
< *** No declaration found for function 'GetCard'
< 
< Segmentation fault
samples-checkpoint/blackjack.decaf
1d0
< Segmentation fault
samples-checkpoint/matrix.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
1,7d0
< 
< *** Error line 77.
<       c = decks[d].GetCard();
<                    ^^^^^^^
< *** No declaration found for function 'GetCard'
< 
< Segmentation fault
samples-checkpoint/blackjack.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
1d0
< Segmentation fault
samples-checkpoint/matrix.decaf
1d0
< Segmentation fault
samples-checkpoint/t9.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
1,24d0
< 
< *** Error line 94.
<     while (elem != null) {
<                 ^^
< *** Incompatible operands: SparseItem != null
< 
< 
< *** Error line 100.
<     return null;
<     ^^^^^^
< *** Incompatible return: null given, SparseItem expected
< 
< 
< *** Error line 106.
<     if (elem != null) {
<              ^^
< *** Incompatible operands: SparseItem != null
< 
< 
< *** Error line 118.
<     if (elem != null) {
<              ^^
< *** Incompatible operands: SparseItem != null
< 
samples-checkpoint/matrix.decaf
1,6d0
< 
< *** Error line 13.
<    Streamable GetStream() { return this; }
<                             ^^^^^^
< *** Incompatible return: Ruler given, Streamable expected
< 
samples-checkpoint/t6.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
1,60d0
< 
< *** Error line 69.
<     this.next = next;
<               ^
< *** Incompatible operands: SparseItem = SparseItem
< 
< 
< *** Error line 93.
<     elem = m[x];
<          ^
< *** Incompatible operands: SparseItem = SparseItem
< 
< 
< *** Error line 94.
<     while (elem != null) {
<                 ^^
< *** Incompatible operands: SparseItem != null
< 
< 
< *** Error line 98.
<       elem = elem.GetNext();
<            ^
< *** Incompatible operands: SparseItem = SparseItem
< 
< 
< *** Error line 100.
<     return null;
<     ^^^^^^
< *** Incompatible return: null given, SparseItem expected
< 
< 
< *** Error line 105.
<     elem = Find(x,y);
<          ^
< *** Incompatible operands: SparseItem = SparseItem
< 
< 
< *** Error line 106.
<     if (elem != null) {
<              ^^
< *** Incompatible operands: SparseItem != null
< 
< 
< *** Error line 111.
<       m[x] = elem;
<            ^
< *** Incompatible operands: SparseItem = SparseItem
< 
< 
< *** Error line 117.
<     elem = Find(x,y);
<          ^
< *** Incompatible operands: SparseItem = SparseItem
< 
< 
< *** Error line 118.
<     if (elem != null) {
<              ^^
< *** Incompatible operands: SparseItem != null
< 
samples-checkpoint/matrix.decaf
1,6d0
< 
< *** Error line 10.
<     mother = mom;
<            ^
< *** Incompatible operands: Animal = Animal
< 
samples-checkpoint/t9.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
1,24d0
< 
< *** Error line 94.
<     while (elem != null) {
<                 ^^
< *** Incompatible operands: SparseItem != null
< 
< 
< *** Error line 100.
<     return null;
<     ^^^^^^
< *** Incompatible return: null given, SparseItem expected
< 
< 
< *** Error line 106.
<     if (elem != null) {
<              ^^
< *** Incompatible operands: SparseItem != null
< 
< 
< *** Error line 118.
<     if (elem != null) {
<              ^^
< *** Incompatible operands: SparseItem != null
< 
samples-checkpoint/matrix.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
1,6d0
< 
< *** Error line 13.
<    Streamable GetStream() { return this; }
<                             ^^^^^^
< *** Incompatible return: Ruler given, Streamable expected
< 
samples-checkpoint/t6.decaf
2,7d1
< *** Error line 4.
<     int Method2(int[] a, Base c, double d) {}
<         ^^^^^^^
< *** Method 'Method2' must match inherited type signature
< 
< 
11a6,11
> 
> 
> *** Error line 4.
>     int Method2(int[] a, Base c, double d) {}
>         ^^^^^^^
> *** Method 'Method2' must match inherited type signature
samples-checkpoint/bad6.decaf
